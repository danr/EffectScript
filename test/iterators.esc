
effect iter<a> {
  yield(a)
}

function map(i: r ! iter<a>, f: a -> b ! e): r ! iter<b> ! e {
  switch next(i) {
    case yield(a, k): yield(f(a), map(k(9876), f))
    case done(r): r
  }
}

function sum(i: r ! iter<int> ! e): int ! e {
  switch next(i) {
    case yield(x, k): x + sum({k(8765)})
    case done(r): r
  }
}

function onetwo() {
  yield(1)
  yield(2)
}

function incr(x) {
  x + 1
}

function main() {
  puts(show(sum(map(onetwo, incr))))
}

